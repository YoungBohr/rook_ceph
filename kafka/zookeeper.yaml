---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: kafka
  labels:
    svc: zookeeper
spec:
  ports:
  - port: 17690
    targetPort: 17690
  clusterIP: None
  selector:
    app: zookeeper

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: kafka
  labels:
    app: zookeeper
    state: stand-alone
spec:
  serviceName: zookeeper-service
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
      state: stand-alone
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: zookeeper
        state: stand-alone
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - zookeeper
                topologyKey: kubernetes.io/hostname
      serviceAccountName: kafka-admin
      terminationGracePeriodSeconds: 21
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.2
              memory: 200Mi
            limits:
              cpu: 1
              memory: 1Gi
          volumeMounts:
          - name: config-volume
            mountPath: /opt/zookeeper-3.4.13/conf/zoo.cfg
            subPath: zoo.cfg
          - name: zookeeper-data
            mountPath: /data
          command:
            - "/opt/zookeeper-3.4.13/bin/zkServer.sh start"
          ports:
            - name: zookeeper-client-port
              containerPort: 17690
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: kafka-cluster-config
          items:
          - key: zookeeper.conf
            path: zoo.cfg
  volumeClaimTemplates:
  - metadata:
      name: zookeeper-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: roo-ceph-block
      resources:
        requests:
          storage: 20Gi