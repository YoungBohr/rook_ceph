---
apiVersion: v1
kind: Service         
metadata:
  name: redis-service
  namespace: redis
  labels:
    svc: redis-server
spec:
  ports:
  - port: 9705
    targetPort: 9705
  clusterIP: None     
  selector:
    app: redis-server

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: redis
  labels:
    app: redis-server
    state: stand-alone
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
      state: stand-alone
  updateStrategy:
    type: RollingUpdate  
  template:
    metadata:
      labels:
        app: redis-server
        state: stand-alone
    spec:
      affinity:         
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:    
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - redis-server
                topologyKey: kubernetes.io/hostname  
      serviceAccountName: redis-admin
      terminationGracePeriodSeconds: 21
      containers:
        - name: redis-server
          image: redis
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.5
              memory: 200Mi
            limits:
              cpu: 1.5
              memory: 4Gi
          volumeMounts:
          - name: config-volume
            mountPath: /etc/redis-server.conf
            subPath: redis-server.conf         
          - name: redis-data
            mountPath: /data
          #workingDir: /data
          command: 
            - "redis-server"
            - "/etc/redis-server.conf"
          ports:
            - name: redis-port
              containerPort: 9705
          #livenessProbe:  
          #  tcpSocket:
          #    port: redis-port
          #  initialDelaySeconds: 60
          #  timeoutSeconds: 90
          #  periodSeconds: 60
      restartPolicy: Always
      volumes:  
      - name: config-volume
        configMap:
          name: redis-server-config
          items:
          - key: redis-server.conf
            path: redis-server.conf
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-ceph-block 
      resources:
        requests:
          storage:  60Gi