---
apiVersion: v1
kind: Service           #定义shard0服务
metadata:
  name: shard0-service
  namespace: mongodb
  labels:
    svc: shard0
spec:
  ports:
  - port: 9000
    targetPort: 9000
  clusterIP: None       #Headless Service
  selector:
    app: shard0

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: shard0
  namespace: mongodb
  labels:
    app: shard0
    cluster: shard
spec:
  serviceName: shard0-service
  replicas: 1
  selector:
    matchLabels:
      app: shard0
      cluster: shard    #匹配标识为shard0的pod
  template:
    metadata:
      labels:
        app: shard0
        cluster: shard
    spec:
      affinity:         #设置Pod的反亲和性
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:    #尽量满足需求不放至同一台机器上
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: cluster
                    operator: In
                    values:
                    - shard
                topologyKey: kubernetes.io/hostname           #以node名作为拓扑域尽量做到每台一个pod
      serviceAccountName: mongo-admin
      terminationGracePeriodSeconds: 21
      containers:
        - name: mongodb-cluster-shard0
          image: mongo
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 0.5
              memory: 200Mi
            limits:
              cpu: 1.5
              memory: 2Gi
          volumeMounts:
          - name: config-volume
            mountPath: /etc/shard0.conf
            subPath: shard0.conf          #以文件形式进行挂载
          - name: shard0-data
            mountPath: /data/db
          #workingDir: /data
          command:
            - "mongod"
            - "-f"
            - "/etc/shard0.conf"
          ports:
            - name: shard0-port
              containerPort: 9000
          #livenessProbe:
          #  tcpSocket:
          #    port: shard0-port
          #  initialDelaySeconds: 60
          #  timeoutSeconds: 90
          #  periodSeconds: 60
          #readinessProbe:                #mongodb 服务就绪探针
          #  exec:
          #    command:
          #      - mongo
          #      - --eval
          #      - "db.adminCommand('ping')"
          #  initialDelaySeconds: 60
          #  timeoutSeconds: 90
          #  periodSeconds: 60
      restartPolicy: Always
      volumes:  
      - name: config-volume
        configMap:
          name: shard-config
          items:
          - key: shard0.conf
            path: shard0.conf
  volumeClaimTemplates:
  - metadata:
      name: shard0-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rook-ceph-block 
      resources:
        requests:
          storage:  100Gi